import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

# Read the CSV file
df = pd.read_csv(
    "issue_info.csv",
    parse_dates=["issue_create_at", "first_comment_create_at", "reply_time"],
)

# Filter out issues without a reply
no_reply_df = df[df["first_comment_create_at"] == "no comment"]
reply_count = df.shape[0] - no_reply_df.shape[0]  # Issues with a reply
no_reply_count = no_reply_df.shape[0]  # Issues without a reply

# Print the counts
print(f"Issues with no reply: {no_reply_count}")
print(f"Issues with a reply: {reply_count}")

# Create a pie chart
labels = ["Replied", "No Reply"]
sizes = [reply_count, no_reply_count]
colors = ["#66b3ff", "#ff6666"]  # Set colors
explode = (0.1, 0)  # Highlight only the 'Replied' part

# Create the pie chart
plt.figure(figsize=(6, 6))
plt.pie(
    sizes,
    explode=explode,
    labels=labels,
    colors=colors,
    autopct="%1.1f%%",
    startangle=140,
    pctdistance=0.85,
    wedgeprops={"edgecolor": "black"},
)

# Add a circular effect
centre_circle = plt.Circle((0, 0), 0.70, color="white", lw=3)
plt.gca().add_artist(centre_circle)

# Set title
plt.title("Issue Reply Status")

# Display the chart
plt.axis("equal")  # Ensure the pie chart is circular
plt.show()

# Save the pie chart as an image
plt.savefig(
    "issue_reply_distribution(generated by analyze_time_distribution.py).png",
    bbox_inches="tight",
)

# Analyze the distribution of issue creation time by year
# Extract the year of issue creation
df["issue_create_year"] = df["issue_create_at"].dt.to_period("Y")

# Create a count plot for issue creation by year
plt.figure(figsize=(14, 8))
sns.countplot(
    x="issue_create_year",
    data=df,
    palette="viridis",
    order=df["issue_create_year"].value_counts().index,
)
plt.title("Issue Creation Yearly Distribution")
plt.xlabel("Year")
plt.ylabel("Number of Issues Created")
plt.xticks(rotation=45)

# Save the yearly distribution plot as an image
plt.savefig(
    "time_create_at_distribution(generated by analyze_time_distribution.py).png",
    bbox_inches="tight",
)
plt.show()
